why using function() not arrow function?

authorsSchema.pre("save",function(next){
  const newAuthor = this
})

because we want to use "this" keyword. it doesnt work with arrow function.

Why this keyword does not work with arrow function?
this in regular function always refers to the context of the function being called. 
However, in the arrow function, this has nothing to do with the caller of the function. 
It refers to the scope where the function (the enclosing context) is present. That's why we get undefined.
(source https://www.section.io/engineering-education/how-to-use-javascript-arrow-functions-and-this-keyword/ )
-----------------------------------------------------------------------------

check at POSTMAN after hashing password, 

what we enter at POST method:

{"name": "Johny",
"surname": "Ughway",
"email": "ughway234@yahoo.com",
"dateOfBirth": "1989-1-1",
"password": "random1234"          
}

result should be like this:
{
    "name": "Johny",
    "surname": "Ughway",
    "email": "ughway234@yahoo.com",
    "dateOfBirth": "1989-1-1",

    "password": "$2b$09$3xfX9RVrkksy5vSqMLJHiuoxvdkqDvgX/iPE0Szj0nPFcTQKXIQye",

    "_id": "6288decf81d8f7e5b8c81527",
    "createdAt": "2022-05-21T12:45:03.673Z",
    "updatedAt": "2022-05-21T12:45:03.673Z",
    "__v": 0
}

see the password is already hashed at response
-------------------------------------------------------------------------------------
check at POSTMAN after delete password from response result, 

what we enter at POST method:
{"name": "Kaleea",
"surname": "Ughway",
"email": "kaleUughway234@yahoo.com",
"dateOfBirth": "1990-1-4",
"password": "kalekale456"
           
}

result should be like this:

{
    "name": "Kaleea",
    "surname": "Ughway",
    "email": "kaleUughway234@yahoo.com",
    "dateOfBirth": "1990-1-4",
    "_id": "6288e1130f5fa355e8050fa5",
    "createdAt": "2022-05-21T12:54:43.900Z",
    "updatedAt": "2022-05-21T12:54:43.900Z",
    "__v": 0
}

-------------------------------------------------------------------------------------
COMPARING (using bcrypt)

authorsSchema.statics.checkCredentials = async function (email, plainPass) {

}

1.  .static.customMethod() let us define some custom methods attached to the authorsModel

2. in the "statics", "this" keyword represents the authorsModel itself


------- step by step of comparing:

1.  search if email exists in our DB
2.  If email exists, we need to check the password (using bcrypt.compare)
3.  if everything is fine, we will return the author himself
4.  if password is not correct we will return NULL
    if email is not correct we will return NULL too

why NULL ? if none of them is correct we dont want to give a hint (to potential password breaker), just return nothing

-------------------------------------------------------------------------------------

what error is this?
happened when checking at POSTMAN when comparing the hashed password

Incoming request --> POST -- Sat May 21 2022 15:56:23 GMT+0200 (Central European Summer Time)
file:///C:/Users/erliz/OneDrive/Desktop/Homework/Back-end/strive-homework-m6-w3-p2/strive-homework-m6-w3-p2/src/services/authors/index.js:55
        next(error)
        ^

ReferenceError: next is not defined
    at file:///C:/Users/erliz/OneDrive/Desktop/Homework/Back-end/strive-homework-m6-w3-p2/strive-homework-m6-w3-p2/src/services/authors/index.js:55:9
[nodemon] app crashed - waiting for file changes before starting...

Cause found -> i forgot to type next here:
authorsRouter.post("/register", async (req,res)=>{}
authorsRouter.post("/login", async (req,res)=>{}

Solve it just adding next:
authorsRouter.post("/register", async (req,res,next)=>{}
authorsRouter.post("/login", async (req,res,next)=>{}

//
Rookie mistake huh? :D :D :D :D
that's fine, ERROR message is our FRIEND
//
-------------------------------------------------------------------------------------
what error is this?

an error that happened when the frontend part missing one (or two) properties (in this case, password property was missing)

Incoming request --> POST -- Sat May 21 2022 17:29:36 GMT+0200 (Central European Summer Time)
REQUEST BODY:  {
  name: 'Assyla',
  surname: 'Kmode',
  email: 'kmodeReady@yahoo.com',
  dateOfBirth: '2000-03-03'
}
ReferenceError: mongoose is not defined
    at notFoundHandler (file:///C:/Users/erliz/OneDrive/Desktop/Homework/Back-end/strive-homework-m6-w3-p2/strive-homework-m6-w3-p2/src/errorsHandlers.js:31:44)
    at Layer.handle_error (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\layer.js:71:5)     
    at trim_prefix (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\index.js:326:13)
    at C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\index.js:286:9
    at Function.process_params (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\index.js:346:12)
    at next (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\index.js:280:10)
    at forbiddenHandler (file:///C:/Users/erliz/OneDrive/Desktop/Homework/Back-end/strive-homework-m6-w3-p2/strive-homework-m6-w3-p2/src/errorsHandlers.js:26:5)
    at Layer.handle_error (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\layer.js:71:5)     
    at trim_prefix (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\index.js:326:13)
    at C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\index.js:286:9



solved just by adding the correct property at frontend that match to the schema at backend

Incoming request --> POST -- Sat May 21 2022 17:33:26 GMT+0200 (Central European Summer Time)
REQUEST BODY:  {
  name: 'Kayla',
  surname: 'Mikona',
  email: 'kayla@yahoo.com',
  dateOfBirth: '1978-04-03',
  password: 'kayla12345'
}

-------------------------------------------------------------------------------------

//here, we want to generate a token and verify it (basically this is the process)
jwt.sign(payload, process.env.JWT_SECRET,{expiresIn:"1 week"}, (err, token) =>{})  //template GENERATE token

jwt.verify(token, process.env.JWT_SECRET, (err, payload) =>{}) //template VERIFY token

but wee need to convert functions above to promise function , because token generation can take sometimes

-------------------------------------------------------------------------------------

error while testing GENERATE TOKEN at POSTMAN

//1 cause
previously:
export const generateJWTToken = payload =>
new Promise ((resolve, reject)=>
jwt.sign(payload, process.env.JWT_SECRET,{expiresIn:"1 week"}, (err, payload) =>{
    if(err) reject(err)
    else resolve(token)
})
)

what happened : postman not giving TOKEN back as response

solved:
export const generateJWTToken = payload =>
new Promise ((resolve, reject)=>
jwt.sign(payload, process.env.JWT_SECRET,{expiresIn:"1 week"}, (err, token) =>{
    if(err) reject(err)
    else resolve(token)
})
)

it should be (err,token) not (err,payload) because we are still in the process of generating token
remember : //Input: payload, output: promise that resolve into a token

//2 cause
Token not generated because of double data saved in DB

this user is saved 2x in DB
{
    "name": "Ailee",
    "surname": "Kim",
    "email": "kimmeeAA@yahoo.com",
    "dateOfBirth": "1995-7-10",
    "_id": "628b509a1217816e222ab5ef",
    "createdAt": "2022-05-23T09:15:06.438Z",
    "updatedAt": "2022-05-23T09:15:06.438Z"
}

cant get token after trying to log in:
http://localhost:3002/authors/login

{
"email": "kimmeeAA@yahoo.com",
"password": "1234"     
}

solved: delete one of the double data in Mongo Compass
-------------------------------------------------------------------------------------

Attaches JWT on every request:

1. go to POSTMAN
2. copy the token that we get after log in (POST method)
  http://localhost:3002/authors/login
3. go to GET method with this endpoint http://localhost:3002/authors
 3.a. click Authorization, PASTE the token inside token already
 3.b. check at headers -> authorization, see the Bearer token already there
 3.c. click SEND

-------------------------------------------------------------------------------------

What error is this?

forget to put .js when importing


before:
import { verifyJWTToken } from "./tools";

after:
import { verifyJWTToken } from "./tools.js";



the error:

node:internal/errors:464
    ErrorCaptureStackTrace(err);
    ^

Error [ERR_MODULE_NOT_FOUND]: Cannot find module 'C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\src\lib\auth\tools' imported from C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\src\lib\auth\token.js
    at new NodeError (node:internal/errors:371:5)
    at finalizeResolution (node:internal/modules/esm/resolve:416:11)
    at moduleResolve (node:internal/modules/esm/resolve:932:10)
    at defaultResolve (node:internal/modules/esm/resolve:1044:11)
    at ESMLoader.resolve (node:internal/modules/esm/loader:422:30)
    at ESMLoader.getModuleJob (node:internal/modules/esm/loader:222:40)
    at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:76:40)
    at link (node:internal/modules/esm/module_job:75:36) {
  code: 'ERR_MODULE_NOT_FOUND'
}
[nodemon] app crashed - waiting for file changes before starting...





-------------------------------------------------------------------------------------

what error is this?

error still occuring even after inputting the right email, password, and correct Bearer token.

WHY??

Incoming request --> GET -- Mon May 23 2022 12:27:06 GMT+0200 (Central European Summer Time)
JsonWebTokenError: invalid token
    at Object.module.exports [as verify] (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\jsonwebtoken\verify.js:75:17)
    at file:///C:/Users/erliz/OneDrive/Desktop/Homework/Back-end/strive-homework-m6-w3-p2/strive-homework-m6-w3-p2/src/lib/auth/tools.js:28:5
    at new Promise (<anonymous>)
    at verifyJWTToken (file:///C:/Users/erliz/OneDrive/Desktop/Homework/Back-end/strive-homework-m6-w3-p2/strive-homework-m6-w3-p2/src/lib/auth/tools.js:27:1)
    at JWTAuthMiddleware (file:///C:/Users/erliz/OneDrive/Desktop/Homework/Back-end/strive-homework-m6-w3-p2/strive-homework-m6-w3-p2/src/lib/auth/token.js:23:31)
    at Layer.handle [as handle_request] (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\layer.js:95:5)
    at next (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\route.js:144:13)
    at Route.dispatch (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\route.js:114:3)        
    at Layer.handle [as handle_request] (C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\layer.js:95:5)
    at C:\Users\erliz\OneDrive\Desktop\Homework\Back-end\strive-homework-m6-w3-p2\strive-homework-m6-w3-p2\node_modules\express\lib\router\index.js:284:15

at POSTMAN:

{
    "message": "Token is not valid"
}

problem found,

before:
const token = req.headers.authorization.replace("Bearer", "")

after:
const token = req.headers.authorization.replace("Bearer ", "") 
//solved. DONT forget to put space after Bearer

-------------------------------------------------------------------------------------

error happened when testing with postman.
after applying admin middleware on endpoints, 
at postman ->  log in as "Admin",
but still getting response "Only Admin is allowed"

problem found: forgot to type author.role when generating token

before:

authorsRouter.post("/login", async (req,res,next)=>{
    try {
       //1. extraxt credentials from req.body

       const {email, password}= req.body


       //2. verify them using bcrypt.compare for the password

       const author = await authorsModel.checkCredentials(email, password)

       //3. if credentials are FINE, we will generate a TOKEN (if not, error 401)
       if (author) {


            //generate token
            const token = await generateJWTToken({_id:author._id}) //here is the problem



           //4. TOKEN is send as a RESPONSE
           res.send({accessToken:token, message : "Credentials are OK"})
       } else {
         next(createError(401, "Oops! Credentials are not OK"))  
       }
       
     
    } catch (error) {
        next(error)
    }
       
    })

    after:
    authorsRouter.post("/login", async (req,res,next)=>{
    try {
       //1. extraxt credentials from req.body

       const {email, password}= req.body


       //2. verify them using bcrypt.compare for the password

       const author = await authorsModel.checkCredentials(email, password)

       //3. if credentials are FINE, we will generate a TOKEN (if not, error 401)
       if (author) {


            //generate token
            const token = await generateJWTToken({_id:author._id, role:author.role}) //here, solved




           //4. TOKEN is send as a RESPONSE
           res.send({accessToken:token, message : "Credentials are OK"})
       } else {
         next(createError(401, "Oops! Credentials are not OK"))  
       }
       
     
    } catch (error) {
        next(error)
    }
       
    })


-------------------------------------------------------------------------------------